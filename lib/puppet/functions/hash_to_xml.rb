# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
require 'xmlsimple'

# ---- original file header ----
#
# @summary
#     Function that converts a hash to an XML string
#
#  @param [Hash] data Hash to be converted into xml
#  @param [Hash] options (optional) second parameter will be passed into XmlSimple.xml_out
#  @return [String] xml is generated from `$data`
#
#
Puppet::Functions.create_function(:hash_to_xml) do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end

  def default_impl(*args)
    if args.empty? || args.length > 2
      raise Puppet::Error, "#hash_to_xml accepts only one (1) or two (2) arguments, you passed #{args.length}"
    end

    args.each do |arg|
      if arg.class != Hash
        raise Puppet::Error, "#hash_to_xml requires a hash for argument, you passed a #{arg.class}"
      end
    end

    if args.length == 1
      XmlSimple.xml_out(args[0])
    else
      XmlSimple.xml_out(args[0], args[1])
    end
  end
end
